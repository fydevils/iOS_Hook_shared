//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct AMapEngine {
    struct IMapController *_field1;
    struct ISearchService *_field2;
    int _field3;
    struct IMapView *_field4;
    struct IAMapEngineCallback *_field5;
    struct IEGLDeviceEventObserver *_field6;
    int _field7;
    int _field8;
    unsigned char _field9;
    struct AMapResManager *_field10;
};

struct AMapResManager;

struct AMapTileBlock;

struct BuildingDraw;

struct BuildingOptions {
    CDUnknownFunctionPointerType *_field1;
    struct vector<AMapSDK_Common_Building::IVec2, std::__1::allocator<AMapSDK_Common_Building::IVec2>> _field2;
    int _field3;
    int _field4;
    struct Vec4 _field5;
    struct Vec4 _field6;
};

struct BuildingOverlayDelegate {
    CDUnknownFunctionPointerType *_field1;
    struct Cache<unsigned int, std::__1::vector<AMapSDK_Common_Building::CachedDrawable, std::__1::allocator<AMapSDK_Common_Building::CachedDrawable>>, std::__1::mutex, std::__1::unordered_map<unsigned int, std::__1::__list_iterator<AMapSDK_Common_Building::KeyValuePair<unsigned int, std::__1::vector<AMapSDK_Common_Building::CachedDrawable, std::__1::allocator<AMapSDK_Common_Building::CachedDrawable>>>, void *>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, std::__1::__list_iterator<AMapSDK_Common_Building::KeyValuePair<unsigned int, std::__1::vector<AMapSDK_Common_Building::CachedDrawable, std::__1::allocator<AMapSDK_Common_Building::CachedDrawable>>>, void *>>>>> *_field2;
    struct AMapTileBlock *_field3;
    vector_f672cb0f _field4;
    struct vector<AMapSDK_Common_Building::BuildingOptions *, std::__1::allocator<AMapSDK_Common_Building::BuildingOptions *>> _field5;
    struct BuildingDraw *_field6;
};

struct CGAffineTransform {
    double a;
    double b;
    double c;
    double d;
    double tx;
    double ty;
};

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct CLLocationCoordinate2D {
    double latitude;
    double longitude;
};

struct Cache<unsigned int, std::__1::vector<AMapSDK_Common_Building::CachedDrawable, std::__1::allocator<AMapSDK_Common_Building::CachedDrawable>>, std::__1::mutex, std::__1::unordered_map<unsigned int, std::__1::__list_iterator<AMapSDK_Common_Building::KeyValuePair<unsigned int, std::__1::vector<AMapSDK_Common_Building::CachedDrawable, std::__1::allocator<AMapSDK_Common_Building::CachedDrawable>>>, void *>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, std::__1::__list_iterator<AMapSDK_Common_Building::KeyValuePair<unsigned int, std::__1::vector<AMapSDK_Common_Building::CachedDrawable, std::__1::allocator<AMapSDK_Common_Building::CachedDrawable>>>, void *>>>>>;

struct CrossRoadsMap;

struct DataRequestParam {
    char _field1[2];
    unsigned int _field2;
    unsigned int _field3;
    char *_field4;
    char *_field5;
    struct IMapDataTask *_field6;
};

struct IAMapEngineCallback;

struct ICMPHeader {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    unsigned short _field4;
    unsigned short _field5;
};

struct IEGLDeviceEventObserver;

struct IMapController {
    CDUnknownFunctionPointerType *_field1;
};

struct IMapDataTask;

struct IMapPosture {
    CDUnknownFunctionPointerType *_field1;
};

struct IMapView {
    CDUnknownFunctionPointerType *_field1;
};

struct ISearchService;

struct IVec2;

struct IndoorBuilding {
    char _field1[64];
    char _field2[64];
    char _field3[8];
    int _field4;
    char _field5[20];
    char _field6[8];
    int _field7;
    int *_field8;
    char **_field9;
    char **_field10;
    int _field11;
    int *_field12;
    float _field13;
};

struct IrrAllocator<dice::MapObjectWrap<dice::MapBaseOverlayItem>> {
    CDUnknownFunctionPointerType *_field1;
};

struct JMergePoint {
    int _field1;
    int _field2;
};

struct MA3DModelObjFileParser {
    CDUnknownFunctionPointerType *_field1;
    struct vector<MA3DModleObjFile::Vec3, std::__1::allocator<MA3DModleObjFile::Vec3>> _field2;
    struct vector<MA3DModleObjFile::Vec2, std::__1::allocator<MA3DModleObjFile::Vec2>> _field3;
    struct vector<MA3DModleObjFile::Vertex, std::__1::allocator<MA3DModleObjFile::Vertex>> _field4;
    float _field5;
    float _field6;
    float _field7;
    float _field8;
    float _field9;
    float _field10;
};

struct MACoordinateBounds {
    struct CLLocationCoordinate2D northEast;
    struct CLLocationCoordinate2D southWest;
};

struct MACoordinateRegion {
    struct CLLocationCoordinate2D center;
    struct MACoordinateSpan span;
};

struct MACoordinateSpan {
    double latitudeDelta;
    double longitudeDelta;
};

struct MAMapEngineCallBack {
    CDUnknownFunctionPointerType *_field1;
    CDUnknownFunctionPointerType *_field2;
    id _field3;
};

struct MAMapPoint {
    double x;
    double y;
};

struct MAMapRect {
    struct MAMapPoint origin;
    struct MAMapSize size;
};

struct MAMapSize {
    double width;
    double height;
};

struct MAMapVectorOverLay {
    CDUnknownFunctionPointerType *_field1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    long long _field7;
    struct IMapView *_field8;
    double _field9;
    double _field10;
    struct vector<dice::MapObjectWrap<dice::MapBaseOverlayItem>, dice::IrrAllocator<dice::MapObjectWrap<dice::MapBaseOverlayItem>>> _field11;
    void *_field12;
    struct MapObjectWrap<dice::MapBaseOverlayItem> _field13;
    CDUnknownFunctionPointerType _field14;
    _Bool _field15;
    unsigned int _field16;
    unsigned int _field17;
    char *_field18;
    char *_field19;
    struct CrossRoadsMap *_field20;
    void *_field21;
    void *_field22;
    unsigned int _field23;
    unsigned int _field24;
    unsigned int _field25;
    struct CGRect _field26;
    int _field27;
    int _field28;
    id _field29;
    int _field30;
};

struct MAPolygonClipper {
    vector_f60ea51c *_field1;
    unsigned long long _field2;
    struct Vector3<float> *_field3;
    struct Vector3<float> _field4[4];
    struct Vector3<float> _field5[4];
    vector_f60ea51c _field6;
    struct vector<MAClipper::IntersectState, std::__1::allocator<MAClipper::IntersectState>> _field7;
    struct vector<short, std::__1::allocator<short>> _field8;
    vector_195fe69b _field9;
    unsigned short _field10;
    unsigned short _field11;
    unsigned short _field12;
    unsigned short _field13;
    _Bool _field14;
    int _field15;
    vector_195fe69b _field16;
};

struct MAPolygonTriangulator {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    int _field3;
    int _field4;
    vector_f60ea51c *_field5;
    unsigned long long _field6;
    vector_195fe69b _field7;
    struct vector<short, std::__1::allocator<short>> _field8;
    vector_195fe69b _field9;
};

struct MAQuadTreeNode {
    struct MAQuadTreeNode *_field1;
    struct MAQuadTreeNode *_field2;
    struct MAQuadTreeNode *_field3;
    struct MAQuadTreeNode *_field4;
    struct MAMapRect _field5;
    int _field6;
    struct MAQuadTreeNodeData *_field7;
    int _field8;
    int _field9;
};

struct MAQuadTreeNodeData;

struct MATile {
    unsigned int x;
    unsigned int y;
    short zoom;
};

struct MATileOverlayPath {
    long long x;
    long long y;
    long long z;
    double contentScaleFactor;
};

struct MapBaseOverlayItem;

struct MapFuncActiveParam {
    int _field1;
    void *_field2;
};

struct MapObjectWrap<dice::MapBaseOverlayItem> {
    struct MapBaseOverlayItem *_field1;
};

struct MapRGBA {
    unsigned char r;
    unsigned char g;
    unsigned char b;
    unsigned char a;
};

struct MapResourceParam {
    int _field1;
    int _field2;
    char *_field3;
};

struct NSMutableDictionary {
    Class _field1;
};

struct PLCrashHostInfoVersion {
    unsigned long long major;
    unsigned long long minor;
    unsigned long long revision;
};

struct PLCrashReporterCallbacks {
    unsigned short _field1;
    void *_field2;
    CDUnknownFunctionPointerType _field3;
};

struct PolylineCapTextureInfo {
    float x1;
    float y1;
    float x2;
    float y2;
};

struct PolylineTextureInfo {
    float x1;
    float y1;
    float x2;
    float y2;
    float textureLen;
};

struct TRect<int> {
    int xmin;
    int ymin;
    int xmax;
    int ymax;
};

struct UIEdgeInsets {
    double top;
    double left;
    double bottom;
    double right;
};

struct UIOffset {
    double horizontal;
    double vertical;
};

struct Vec2;

struct Vec3;

struct Vec4 {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
};

struct Vector3<float> {
    float _field1;
    float _field2;
    float _field3;
    int _field4;
};

struct Vector4<float> {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
};

struct VectorCrossAttr {
    _Bool isDayMode;
    float arrowBorderWidth;
    float arrowLineWidth;
    struct MapRGBA areaColor;
    struct MapRGBA arrowBorderColor;
    struct MapRGBA arrowLineColor;
    struct PolylineCapTextureInfo arrowlineCapTextureInfo;
    struct PolylineCapTextureInfo arrowHeaderCapTextureInfo;
    struct PolylineTextureInfo arrowlineTextureInfo;
    struct TRect<int> areaRect;
};

struct Vertex;

struct _MAProjectionContext {
    float _field1;
    float _field2;
    float _field3;
    double _field4;
    double _field5;
    float _field6;
    float _field7;
};

struct _NSRange {
    unsigned long long _field1;
    unsigned long long _field2;
};

struct _PLCrashReportDecoder {
    struct _Plcrash__CrashReport *_field1;
};

struct _Plcrash__CrashReport {
    struct _ProtobufCMessage _field1;
    struct _Plcrash__CrashReport__SystemInfo *_field2;
    struct _Plcrash__CrashReport__ApplicationInfo *_field3;
    unsigned long long _field4;
    struct _Plcrash__CrashReport__Thread **_field5;
    unsigned long long _field6;
    struct _Plcrash__CrashReport__BinaryImage **_field7;
    struct _Plcrash__CrashReport__Exception *_field8;
    struct _Plcrash__CrashReport__Signal *_field9;
    struct _Plcrash__CrashReport__ProcessInfo *_field10;
    struct _Plcrash__CrashReport__MachineInfo *_field11;
    struct _Plcrash__CrashReport__ReportInfo *_field12;
};

struct _Plcrash__CrashReport__ApplicationInfo {
    struct _ProtobufCMessage _field1;
    char *_field2;
    char *_field3;
    char *_field4;
};

struct _Plcrash__CrashReport__BinaryImage;

struct _Plcrash__CrashReport__Exception {
    struct _ProtobufCMessage _field1;
    char *_field2;
    char *_field3;
    unsigned long long _field4;
    struct _Plcrash__CrashReport__Thread__StackFrame **_field5;
};

struct _Plcrash__CrashReport__MachineInfo {
    struct _ProtobufCMessage _field1;
    char *_field2;
    struct _Plcrash__CrashReport__Processor *_field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct _Plcrash__CrashReport__ProcessInfo {
    struct _ProtobufCMessage _field1;
    char *_field2;
    unsigned int _field3;
    char *_field4;
    char *_field5;
    unsigned int _field6;
    int _field7;
    int _field8;
    unsigned long long _field9;
};

struct _Plcrash__CrashReport__Processor {
    struct _ProtobufCMessage _field1;
    int _field2;
    int _field3;
    unsigned long long _field4;
    unsigned long long _field5;
};

struct _Plcrash__CrashReport__ReportInfo;

struct _Plcrash__CrashReport__Signal {
    struct _ProtobufCMessage _field1;
    char *_field2;
    char *_field3;
    unsigned long long _field4;
    struct _Plcrash__CrashReport__Signal__MachException *_field5;
};

struct _Plcrash__CrashReport__Signal__MachException {
    struct _ProtobufCMessage _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned long long *_field4;
};

struct _Plcrash__CrashReport__Symbol {
    struct _ProtobufCMessage _field1;
    char *_field2;
    unsigned long long _field3;
    int _field4;
    unsigned long long _field5;
};

struct _Plcrash__CrashReport__SystemInfo {
    struct _ProtobufCMessage _field1;
    int _field2;
    int _field3;
    char *_field4;
    int _field5;
    long long _field6;
    char *_field7;
};

struct _Plcrash__CrashReport__Thread;

struct _Plcrash__CrashReport__Thread__StackFrame {
    struct _ProtobufCMessage _field1;
    unsigned long long _field2;
    struct _Plcrash__CrashReport__Symbol *_field3;
};

struct _ProtobufCMessage {
    struct _ProtobufCMessageDescriptor *_field1;
    unsigned int _field2;
    struct _ProtobufCMessageUnknownField *_field3;
};

struct _ProtobufCMessageDescriptor;

struct _ProtobufCMessageUnknownField;

struct __siginfo {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    unsigned int _field5;
    int _field6;
    void *_field7;
    union sigval _field8;
    long long _field9;
    unsigned long long _field10[7];
};

struct cameraEulerAngle {
    double yaw;
    double pitch;
    double roll;
};

struct cameraVec3 {
    double x;
    double y;
    double z;
};

struct in6_addr {
    union {
        unsigned char _field1[16];
        unsigned short _field2[8];
        unsigned int _field3[4];
    } _field1;
};

struct in_addr {
    unsigned int _field1;
};

struct plcrash_exception_server_context {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    CDUnknownFunctionPointerType _field5;
    void *_field6;
    struct _opaque_pthread_mutex_t {
        long long _field1;
        char _field2[56];
    } _field7;
    struct _opaque_pthread_cond_t {
        long long _field1;
        char _field2[40];
    } _field8;
    unsigned int _field9;
    _Bool _field10;
};

struct plcrash_mach_exception_port_set {
    unsigned int count;
    unsigned int masks[14];
    unsigned int ports[14];
    int behaviors[14];
    int flavors[14];
};

struct sigaction {
    union __sigaction_u {
        CDUnknownFunctionPointerType __sa_handler;
        CDUnknownFunctionPointerType __sa_sigaction;
    } __sigaction_u;
    unsigned int sa_mask;
    int sa_flags;
};

struct sockaddr {
    unsigned char _field1;
    unsigned char _field2;
    char _field3[14];
};

struct sockaddr_in {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    struct in_addr _field4;
    char _field5[8];
};

struct sockaddr_in6 {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    unsigned int _field4;
    struct in6_addr _field5;
    unsigned int _field6;
};

struct sockaddr_un {
    unsigned char _field1;
    unsigned char _field2;
    char _field3[104];
};

struct timeval {
    long long tv_sec;
    int tv_usec;
};

struct tm_zip_s {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
};

struct vector<AMapSDK_Common_Building::BuildingOptions *, std::__1::allocator<AMapSDK_Common_Building::BuildingOptions *>> {
    struct BuildingOptions **_field1;
    struct BuildingOptions **_field2;
    struct __compressed_pair<AMapSDK_Common_Building::BuildingOptions **, std::__1::allocator<AMapSDK_Common_Building::BuildingOptions *>> {
        struct BuildingOptions **_field1;
    } _field3;
};

struct vector<AMapSDK_Common_Building::IVec2, std::__1::allocator<AMapSDK_Common_Building::IVec2>> {
    struct IVec2 *_field1;
    struct IVec2 *_field2;
    struct __compressed_pair<AMapSDK_Common_Building::IVec2 *, std::__1::allocator<AMapSDK_Common_Building::IVec2>> {
        struct IVec2 *_field1;
    } _field3;
};

struct vector<MA3DModleObjFile::Vec2, std::__1::allocator<MA3DModleObjFile::Vec2>> {
    struct Vec2 *_field1;
    struct Vec2 *_field2;
    struct __compressed_pair<MA3DModleObjFile::Vec2 *, std::__1::allocator<MA3DModleObjFile::Vec2>> {
        struct Vec2 *_field1;
    } _field3;
};

struct vector<MA3DModleObjFile::Vec3, std::__1::allocator<MA3DModleObjFile::Vec3>> {
    struct Vec3 *_field1;
    struct Vec3 *_field2;
    struct __compressed_pair<MA3DModleObjFile::Vec3 *, std::__1::allocator<MA3DModleObjFile::Vec3>> {
        struct Vec3 *_field1;
    } _field3;
};

struct vector<MA3DModleObjFile::Vertex, std::__1::allocator<MA3DModleObjFile::Vertex>> {
    struct Vertex *_field1;
    struct Vertex *_field2;
    struct __compressed_pair<MA3DModleObjFile::Vertex *, std::__1::allocator<MA3DModleObjFile::Vertex>> {
        struct Vertex *_field1;
    } _field3;
};

struct vector<MAClipper::IntersectState, std::__1::allocator<MAClipper::IntersectState>> {
    int *_field1;
    int *_field2;
    struct __compressed_pair<MAClipper::IntersectState *, std::__1::allocator<MAClipper::IntersectState>> {
        int *_field1;
    } _field3;
};

struct vector<MAGradientColoredLine::Drawable, std::__1::allocator<MAGradientColoredLine::Drawable>> {
    struct Drawable *_field1;
    struct Drawable *_field2;
    struct __compressed_pair<MAGradientColoredLine::Drawable *, std::__1::allocator<MAGradientColoredLine::Drawable>> {
        struct Drawable *_field1;
    } _field3;
};

struct vector<MAGradientColoredLine::Vertex, std::__1::allocator<MAGradientColoredLine::Vertex>> {
    struct Vertex *_field1;
    struct Vertex *_field2;
    struct __compressed_pair<MAGradientColoredLine::Vertex *, std::__1::allocator<MAGradientColoredLine::Vertex>> {
        struct Vertex *_field1;
    } _field3;
};

struct vector<MANormalLineBuilder::Drawable, std::__1::allocator<MANormalLineBuilder::Drawable>> {
    struct Drawable *_field1;
    struct Drawable *_field2;
    struct __compressed_pair<MANormalLineBuilder::Drawable *, std::__1::allocator<MANormalLineBuilder::Drawable>> {
        struct Drawable *_field1;
    } _field3;
};

struct vector<MANormalLineBuilder::Vertex, std::__1::allocator<MANormalLineBuilder::Vertex>> {
    struct Vertex *_field1;
    struct Vertex *_field2;
    struct __compressed_pair<MANormalLineBuilder::Vertex *, std::__1::allocator<MANormalLineBuilder::Vertex>> {
        struct Vertex *_field1;
    } _field3;
};

struct vector<Vector3<float>, std::__1::allocator<Vector3<float>>> {
    struct Vector3<float> *_field1;
    struct Vector3<float> *_field2;
    struct __compressed_pair<Vector3<float>*, std::__1::allocator<Vector3<float>>> {
        struct Vector3<float> *_field1;
    } _field3;
};

struct vector<Vector4<float>, std::__1::allocator<Vector4<float>>> {
    struct Vector4<float> *_field1;
    struct Vector4<float> *_field2;
    struct __compressed_pair<Vector4<float>*, std::__1::allocator<Vector4<float>>> {
        struct Vector4<float> *_field1;
    } _field3;
};

struct vector<dice::MapObjectWrap<dice::MapBaseOverlayItem>, dice::IrrAllocator<dice::MapObjectWrap<dice::MapBaseOverlayItem>>> {
    struct MapObjectWrap<dice::MapBaseOverlayItem> *_field1;
    unsigned int _field2;
    unsigned int _field3;
    struct IrrAllocator<dice::MapObjectWrap<dice::MapBaseOverlayItem>> _field4;
    unsigned int :4;
    unsigned int :1;
};

struct vector<float, std::__1::allocator<float>> {
    float *_field1;
    float *_field2;
    struct __compressed_pair<float *, std::__1::allocator<float>> {
        float *_field1;
    } _field3;
};

struct vector<short, std::__1::allocator<short>> {
    short *_field1;
    short *_field2;
    struct __compressed_pair<short *, std::__1::allocator<short>> {
        short *_field1;
    } _field3;
};

struct vector<std::__1::vector<Vector3<float>, std::__1::allocator<Vector3<float>>>, std::__1::allocator<std::__1::vector<Vector3<float>, std::__1::allocator<Vector3<float>>>>> {
    vector_f60ea51c *_field1;
    vector_f60ea51c *_field2;
    struct __compressed_pair<std::__1::vector<Vector3<float>, std::__1::allocator<Vector3<float>>>*, std::__1::allocator<std::__1::vector<Vector3<float>, std::__1::allocator<Vector3<float>>>>> {
        vector_f60ea51c *_field1;
    } _field3;
};

struct vector<std::__1::vector<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::vector<unsigned short, std::__1::allocator<unsigned short>>>> {
    vector_195fe69b *_field1;
    vector_195fe69b *_field2;
    struct __compressed_pair<std::__1::vector<unsigned short, std::__1::allocator<unsigned short>>*, std::__1::allocator<std::__1::vector<unsigned short, std::__1::allocator<unsigned short>>>> {
        vector_195fe69b *_field1;
    } _field3;
};

struct vector<unsigned int, std::__1::allocator<unsigned int>> {
    unsigned int *_field1;
    unsigned int *_field2;
    struct __compressed_pair<unsigned int *, std::__1::allocator<unsigned int>> {
        unsigned int *_field1;
    } _field3;
};

struct vector<unsigned short, std::__1::allocator<unsigned short>> {
    unsigned short *_field1;
    unsigned short *_field2;
    struct __compressed_pair<unsigned short *, std::__1::allocator<unsigned short>> {
        unsigned short *_field1;
    } _field3;
};

#if 0
// Names with conflicting types:
typedef struct {
    vector_195fe69b _field1;
    struct vector<MAGradientColoredLine::Vertex, std::__1::allocator<MAGradientColoredLine::Vertex>> _field2;
} Drawable_98991264;

typedef struct {
    vector_195fe69b _field1;
    struct vector<MANormalLineBuilder::Vertex, std::__1::allocator<MANormalLineBuilder::Vertex>> _field2;
    vector_195fe69b _field3;
    vector_195fe69b _field4;
} Drawable_97df83bd;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    float _field2;
    float _field3;
    struct Drawable {
        vector_195fe69b _field1;
        struct vector<MANormalLineBuilder::Vertex, std::__1::allocator<MANormalLineBuilder::Vertex>> _field2;
        vector_195fe69b _field3;
        vector_195fe69b _field4;
    } _field4;
    vector_f60ea51c _field5;
    struct vector<float, std::__1::allocator<float>> _field6;
} MALineBuilder_6dabcb35;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    float _field2;
    float _field3;
    struct Vector4<float> _field4;
    struct Drawable {
        vector_195fe69b _field1;
        struct vector<MAGradientColoredLine::Vertex, std::__1::allocator<MAGradientColoredLine::Vertex>> _field2;
    } _field5;
    vector_f60ea51c _field6;
    struct vector<float, std::__1::allocator<float>> _field7;
    struct vector<Vector4<float>, std::__1::allocator<Vector4<float>>> _field8;
} MALineBuilder_3b276b09;

#endif

#pragma mark Typedef'd Structures

typedef struct {
    unsigned int _field1;
    unsigned short _field2;
    unsigned int _field3;
} CDStruct_91b80c38;

typedef struct {
    unsigned long long _field1;
    id *_field2;
    unsigned long long *_field3;
    unsigned long long _field4[5];
} CDStruct_70511ce9;

typedef struct {
    double lenValue;
    double zoomLevel;
    double totalGeoPoint;
} CDStruct_5ac093a5;

typedef struct {
    long long version;
    void *info;
    CDUnknownFunctionPointerType retain;
    CDUnknownFunctionPointerType release;
    CDUnknownFunctionPointerType copyDescription;
} CDStruct_4210025a;

typedef struct {
    long long _field1;
    int _field2;
} CDStruct_87dc826d;

typedef struct {
    struct tm_zip_s _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned long long _field4;
} CDStruct_192a48cb;

// Template types
typedef struct vector<MAGradientColoredLine::Drawable, std::__1::allocator<MAGradientColoredLine::Drawable>> {
    struct Drawable *_field1;
    struct Drawable *_field2;
    struct __compressed_pair<MAGradientColoredLine::Drawable *, std::__1::allocator<MAGradientColoredLine::Drawable>> {
        struct Drawable *_field1;
    } _field3;
} vector_3729920e;

typedef struct vector<MANormalLineBuilder::Drawable, std::__1::allocator<MANormalLineBuilder::Drawable>> {
    struct Drawable *_field1;
    struct Drawable *_field2;
    struct __compressed_pair<MANormalLineBuilder::Drawable *, std::__1::allocator<MANormalLineBuilder::Drawable>> {
        struct Drawable *_field1;
    } _field3;
} vector_0ca85528;

typedef struct vector<Vector3<float>, std::__1::allocator<Vector3<float>>> {
    struct Vector3<float> *_field1;
    struct Vector3<float> *_field2;
    struct __compressed_pair<Vector3<float>*, std::__1::allocator<Vector3<float>>> {
        struct Vector3<float> *_field1;
    } _field3;
} vector_f60ea51c;

typedef struct vector<std::__1::vector<Vector3<float>, std::__1::allocator<Vector3<float>>>, std::__1::allocator<std::__1::vector<Vector3<float>, std::__1::allocator<Vector3<float>>>>> {
    vector_f60ea51c *_field1;
    vector_f60ea51c *_field2;
    struct __compressed_pair<std::__1::vector<Vector3<float>, std::__1::allocator<Vector3<float>>>*, std::__1::allocator<std::__1::vector<Vector3<float>, std::__1::allocator<Vector3<float>>>>> {
        vector_f60ea51c *_field1;
    } _field3;
} vector_aac46ba0;

typedef struct vector<std::__1::vector<unsigned short, std::__1::allocator<unsigned short>>, std::__1::allocator<std::__1::vector<unsigned short, std::__1::allocator<unsigned short>>>> {
    vector_195fe69b *_field1;
    vector_195fe69b *_field2;
    struct __compressed_pair<std::__1::vector<unsigned short, std::__1::allocator<unsigned short>>*, std::__1::allocator<std::__1::vector<unsigned short, std::__1::allocator<unsigned short>>>> {
        vector_195fe69b *_field1;
    } _field3;
} vector_3ec3dbbf;

typedef struct vector<unsigned int, std::__1::allocator<unsigned int>> {
    unsigned int *_field1;
    unsigned int *_field2;
    struct __compressed_pair<unsigned int *, std::__1::allocator<unsigned int>> {
        unsigned int *_field1;
    } _field3;
} vector_f672cb0f;

typedef struct vector<unsigned short, std::__1::allocator<unsigned short>> {
    unsigned short *_field1;
    unsigned short *_field2;
    struct __compressed_pair<unsigned short *, std::__1::allocator<unsigned short>> {
        unsigned short *_field1;
    } _field3;
} vector_195fe69b;

#pragma mark Named Unions

union sigval {
    int _field1;
    void *_field2;
};

